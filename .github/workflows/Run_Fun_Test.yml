name: Run Functional Test Case

on:
  push:
    branches:
      - master 
    paths:
      - 'src/functional/*.java'

jobs:
#   Build:
#     name: Build
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up JDK 11
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y openjdk-11-jdk
#           echo "export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV
#           echo "export PATH=\${JAVA_HOME}/bin:\${PATH}" >> $GITHUB_ENV

#       - name: Build with Maven
#         run: mvn clean package
        
  Deploy:
    name: Deploy
#     needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install dependencies
        run: |
          sudo apt-get update -qy
          sudo apt-get install -y openssh-client

      - name: Build with Maven
        run: mvn clean package

      - name: Deploy Application
        run: |
          echo "Hello ${{ secrets.SSH_PRIVATE_KEY }}"
          eval $(ssh-agent -s)
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add -
          scp -o StrictHostKeyChecking=no target/*.jar ubuntu@34.238.153.133:/opt/Smart-Bank-Spring-boot-Application-0.0.1-SNAPSHOT.jar
          ssh -o StrictHostKeyChecking=no ubuntu@34.238.153.133 "nohup java -jar /opt/Smart-Bank-Spring-boot-Application-0.0.1-SNAPSHOT.jar > /opt/application.log 2>&1 &"
          echo "Smart-Bank-Spring-boot-Application deployed and running in the background."
  
  functional-test:
    name: Functional-Test
    needs: Deploy
    runs-on: self-hosted

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up Chrome and ChromeDriver
      run: |
        # Update package lists
        sudo apt install -y unzip xvfb libxi6 libgconf-2-4 default-jdk
        # Add Google Chrome repository and install
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo bash -c "echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' >> /etc/apt/sources.list.d/google-chrome.list"
        sudo apt -y update
        sudo apt -y install google-chrome-stable
        # Install ChromeDriver
        CHROME_DRIVER_VERSION="114.0.5735.90"
        wget "https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip"
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/bin/chromedriver
        sudo chown root:root /usr/bin/chromedriver
        sudo chmod +x /usr/bin/chromedriver
        # Install Selenium server
        SELENIUM_VERSION="3.141.59"
        wget "https://selenium-release.storage.googleapis.com/$SELENIUM_VERSION/selenium-server-standalone-$SELENIUM_VERSION.jar"
        mv "selenium-server-standalone-$SELENIUM_VERSION.jar" selenium-server-standalone.jar
        # Install TestNG
        TESTNG_VERSION="6.8.7"
        wget "http://www.java2s.com/Code/JarDownload/testng/testng-$TESTNG_VERSION.jar.zip"
        unzip "testng-$TESTNG_VERSION.jar.zip"
        # Set up environment variables
        export CLASSPATH=".:selenium-server-standalone.jar:testng-$TESTNG_VERSION.jar"
        # Run Chrome with xvfb
        xvfb-run java -Dwebdriver.chrome.driver=/usr/bin/chromedriver -jar selenium-server-standalone.jar &
        # Compile and run the tests
        wget "https://repo1.maven.org/maven2/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar"
        javac -cp "$CLASSPATH:commons-io-2.11.0.jar" LoginTest.java
        java -cp "$CLASSPATH:commons-io-2.11.0.jar" LoginTest
      # Handle errors
      continue-on-error: true
